import { initializeApp } from "firebase/app";
import { logger } from "../logging.js";
import { DECODED_ID_TOKEN_SYMBOL } from "../constants.js";
import { appCache } from "./lru-cache.js";
import { defineNuxtPlugin, useRuntimeConfig } from "#imports";
export default defineNuxtPlugin((nuxtApp) => {
  const runtimeConfig = useRuntimeConfig();
  const decodedToken = nuxtApp[
    // we cannot use a symbol to index
    DECODED_ID_TOKEN_SYMBOL
  ];
  const uid = decodedToken?.uid;
  let firebaseApp;
  if (uid) {
    firebaseApp = appCache.get(uid);
    if (!firebaseApp) {
      const randomId = Math.random().toString(36).slice(2);
      const appName = `auth:${uid}:${randomId}`;
      logger.debug("\u{1F464} creating new app", appName);
      firebaseApp = initializeApp(
        runtimeConfig.public.vuefire.config,
        appName
      );
      appCache.set(uid, firebaseApp);
    } else {
      logger.debug("\u{1F464} reusing authenticated app", firebaseApp.name);
    }
  } else {
    firebaseApp = appCache.get("");
    if (!firebaseApp) {
      firebaseApp = initializeApp(runtimeConfig.public.vuefire.config);
      appCache.set("", firebaseApp);
    }
    logger.debug("\u{1F978} anonymous session");
  }
  return {
    provide: {
      firebaseApp
    }
  };
});
